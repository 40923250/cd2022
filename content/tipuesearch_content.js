var tipuesearch = {"pages": [{'title': 'About', 'text': '倉儲: https://github.com/40923250/cd2022 Blog: https://40923250.github.io/cd2022/blog \n \xa0 \n \n  將 mp4 檔案從 downloads 目錄取出  \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'Group', 'text': '第1組: repo: \xa0 40923201 \xa0 www: \xa0 40923201 \xa0 cd2022bg1-repo: \xa0 40923201 \xa0 cd2022bg1-www: \xa0 40923201 repo: \xa0 40923205 \xa0 www: \xa0 40923205 \xa0 cd2022bg1-repo: \xa0 40923205 \xa0 cd2022bg1-www: \xa0 40923205 repo: \xa0 40923208 \xa0 www: \xa0 40923208 \xa0 cd2022bg1-repo: \xa0 40923208 \xa0 cd2022bg1-www: \xa0 40923208 repo: \xa0 40923210 \xa0 www: \xa0 40923210 \xa0 cd2022bg1-repo: \xa0 40923210 \xa0 cd2022bg1-www: \xa0 40923210 repo: \xa0 40923217 \xa0 www: \xa0 40923217 \xa0 cd2022bg1-repo: \xa0 40923217 \xa0 cd2022bg1-www: \xa0 40923217 repo: \xa0 40923230 \xa0 www: \xa0 40923230 \xa0 cd2022bg1-repo: \xa0 40923230 \xa0 cd2022bg1-www: \xa0 40923230 repo: \xa0 40923231 \xa0 www: \xa0 40923231 \xa0 cd2022bg1-repo: \xa0 40923231 \xa0 cd2022bg1-www: \xa0 40923231 repo: \xa0 40923235 \xa0 www: \xa0 40923235 \xa0 cd2022bg1-repo: \xa0 40923235 \xa0 cd2022bg1-www: \xa0 40923235 第2組: repo: \xa0 40823215 \xa0 www: \xa0 40823215 \xa0 cd2022bg2-repo: \xa0 40823215 \xa0 cd2022bg2-www: \xa0 40823215 repo: \xa0 40923203 \xa0 www: \xa0 40923203 \xa0 cd2022bg2-repo: \xa0 40923203 \xa0 cd2022bg2-www: \xa0 40923203 repo: \xa0 40923204 \xa0 www: \xa0 40923204 \xa0 cd2022bg2-repo: \xa0 40923204 \xa0 cd2022bg2-www: \xa0 40923204 repo: \xa0 40923207 \xa0 www: \xa0 40923207 \xa0 cd2022bg2-repo: \xa0 40923207 \xa0 cd2022bg2-www: \xa0 40923207 repo: \xa0 40923209 \xa0 www: \xa0 40923209 \xa0 cd2022bg2-repo: \xa0 40923209 \xa0 cd2022bg2-www: \xa0 40923209 repo: \xa0 40923213 \xa0 www: \xa0 40923213 \xa0 cd2022bg2-repo: \xa0 40923213 \xa0 cd2022bg2-www: \xa0 40923213 repo: \xa0 40923220 \xa0 www: \xa0 40923220 \xa0 cd2022bg2-repo: \xa0 40923220 \xa0 cd2022bg2-www: \xa0 40923220 repo: \xa0 40923240 \xa0 www: \xa0 40923240 \xa0 cd2022bg2-repo: \xa0 40923240 \xa0 cd2022bg2-www: \xa0 40923240 第3組: repo: \xa0 40923226 \xa0 www: \xa0 40923226 \xa0 cd2022bg3-repo: \xa0 40923226 \xa0 cd2022bg3-www: \xa0 40923226 repo: \xa0 40923242 \xa0 www: \xa0 40923242 \xa0 cd2022bg3-repo: \xa0 40923242 \xa0 cd2022bg3-www: \xa0 40923242 repo: \xa0 40923245 \xa0 www: \xa0 40923245 \xa0 cd2022bg3-repo: \xa0 40923245 \xa0 cd2022bg3-www: \xa0 40923245 repo: \xa0 40923247 \xa0 www: \xa0 40923247 \xa0 cd2022bg3-repo: \xa0 40923247 \xa0 cd2022bg3-www: \xa0 40923247 repo: \xa0 40923249 \xa0 www: \xa0 40923249 \xa0 cd2022bg3-repo: \xa0 40923249 \xa0 cd2022bg3-www: \xa0 40923249 repo: \xa0 40923252 \xa0 www: \xa0 40923252 \xa0 cd2022bg3-repo: \xa0 40923252 \xa0 cd2022bg3-www: \xa0 40923252 repo: \xa0 40923206 \xa0 www: \xa0 40923206 \xa0 cd2022bg3-repo: \xa0 40923206 \xa0 cd2022bg3-www: \xa0 40923206 repo: \xa0 40923224 \xa0 www: \xa0 40923224 \xa0 cd2022bg3-repo: \xa0 40923224 \xa0 cd2022bg3-www: \xa0 40923224 第4組: repo: \xa0 40623143 \xa0 www: \xa0 40623143 \xa0 cd2022bg4-repo: \xa0 40623143 \xa0 cd2022bg4-www: \xa0 40623143 repo: \xa0 40723146 \xa0 www: \xa0 40723146 \xa0 cd2022bg4-repo: \xa0 40723146 \xa0 cd2022bg4-www: \xa0 40723146 repo: \xa0 40923211 \xa0 www: \xa0 40923211 \xa0 cd2022bg4-repo: \xa0 40923211 \xa0 cd2022bg4-www: \xa0 40923211 repo: \xa0 40923218 \xa0 www: \xa0 40923218 \xa0 cd2022bg4-repo: \xa0 40923218 \xa0 cd2022bg4-www: \xa0 40923218 repo: \xa0 40923221 \xa0 www: \xa0 40923221 \xa0 cd2022bg4-repo: \xa0 40923221 \xa0 cd2022bg4-www: \xa0 40923221 repo: \xa0 40923223 \xa0 www: \xa0 40923223 \xa0 cd2022bg4-repo: \xa0 40923223 \xa0 cd2022bg4-www: \xa0 40923223 repo: \xa0 40923227 \xa0 www: \xa0 40923227 \xa0 cd2022bg4-repo: \xa0 40923227 \xa0 cd2022bg4-www: \xa0 40923227 repo: \xa0 40923238 \xa0 www: \xa0 40923238 \xa0 cd2022bg4-repo: \xa0 40923238 \xa0 cd2022bg4-www: \xa0 40923238 repo: \xa0 40923243 \xa0 www: \xa0 40923243 \xa0 cd2022bg4-repo: \xa0 40923243 \xa0 cd2022bg4-www: \xa0 40923243 第5組: repo: \xa0 40923212 \xa0 www: \xa0 40923212 \xa0 cd2022bg5-repo: \xa0 40923212 \xa0 cd2022bg5-www: \xa0 40923212 repo: \xa0 40923229 \xa0 www: \xa0 40923229 \xa0 cd2022bg5-repo: \xa0 40923229 \xa0 cd2022bg5-www: \xa0 40923229 repo: \xa0 40923233 \xa0 www: \xa0 40923233 \xa0 cd2022bg5-repo: \xa0 40923233 \xa0 cd2022bg5-www: \xa0 40923233 repo: \xa0 40923234 \xa0 www: \xa0 40923234 \xa0 cd2022bg5-repo: \xa0 40923234 \xa0 cd2022bg5-www: \xa0 40923234 repo: \xa0 40923237 \xa0 www: \xa0 40923237 \xa0 cd2022bg5-repo: \xa0 40923237 \xa0 cd2022bg5-www: \xa0 40923237 repo: \xa0 40923251 \xa0 www: \xa0 40923251 \xa0 cd2022bg5-repo: \xa0 40923251 \xa0 cd2022bg5-www: \xa0 40923251 repo: \xa0 40923253 \xa0 www: \xa0 40923253 \xa0 cd2022bg5-repo: \xa0 40923253 \xa0 cd2022bg5-www: \xa0 40923253 repo: \xa0 40971220 \xa0 www: \xa0 40971220 \xa0 cd2022bg5-repo: \xa0 40971220 \xa0 cd2022bg5-www: \xa0 40971220 第6組: repo: \xa0 40723217 \xa0 www: \xa0 40723217 \xa0 cd2022bg6-repo: \xa0 40723217 \xa0 cd2022bg6-www: \xa0 40723217 repo: \xa0 40923219 \xa0 www: \xa0 40923219 \xa0 cd2022bg6-repo: \xa0 40923219 \xa0 cd2022bg6-www: \xa0 40923219 repo: \xa0 40923225 \xa0 www: \xa0 40923225 \xa0 cd2022bg6-repo: \xa0 40923225 \xa0 cd2022bg6-www: \xa0 40923225 repo: \xa0 40923232 \xa0 www: \xa0 40923232 \xa0 cd2022bg6-repo: \xa0 40923232 \xa0 cd2022bg6-www: \xa0 40923232 repo: \xa0 40923236 \xa0 www: \xa0 40923236 \xa0 cd2022bg6-repo: \xa0 40923236 \xa0 cd2022bg6-www: \xa0 40923236 repo: \xa0 40923241 \xa0 www: \xa0 40923241 \xa0 cd2022bg6-repo: \xa0 40923241 \xa0 cd2022bg6-www: \xa0 40923241 repo: \xa0 40923246 \xa0 www: \xa0 40923246 \xa0 cd2022bg6-repo: \xa0 40923246 \xa0 cd2022bg6-www: \xa0 40923246 repo: \xa0 40923250 \xa0 www: \xa0 40923250 \xa0 cd2022bg6-repo: \xa0 40923250 \xa0 cd2022bg6-www: \xa0 40923250 第7組: repo: \xa0 40723134 \xa0 www: \xa0 40723134 \xa0 cd2022bg7-repo: \xa0 40723134 \xa0 cd2022bg7-www: \xa0 40723134 repo: \xa0 40723136 \xa0 www: \xa0 40723136 \xa0 cd2022bg7-repo: \xa0 40723136 \xa0 cd2022bg7-www: \xa0 40723136 repo: \xa0 40732331 \xa0 www: \xa0 40732331 \xa0 cd2022bg7-repo: \xa0 40732331 \xa0 cd2022bg7-www: \xa0 40732331 repo: \xa0 40923214 \xa0 www: \xa0 40923214 \xa0 cd2022bg7-repo: \xa0 40923214 \xa0 cd2022bg7-www: \xa0 40923214 repo: \xa0 40923228 \xa0 www: \xa0 40923228 \xa0 cd2022bg7-repo: \xa0 40923228 \xa0 cd2022bg7-www: \xa0 40923228 repo: \xa0 40923248 \xa0 www: \xa0 40923248 \xa0 cd2022bg7-repo: \xa0 40923248 \xa0 cd2022bg7-www: \xa0 40923248 repo: \xa0 40923216 \xa0 www: \xa0 40923216 \xa0 cd2022bg7-repo: \xa0 40923216 \xa0 cd2022bg7-www: \xa0 40923216 \n \n', 'tags': '', 'url': 'Group.html'}, {'title': 'W3', 'text': '1.View Controls \n 2. Homework 01 \n 3. Lab 01 - Triangle Sketches \n 4. Homework 02A - Step Block \n 5. Homework 02B - Flywheel \n https://www.youtube.com/watch?v=GUaa97tALxE&list=PLzEsJue49U_EMMv0eBo8MNJjJOq_WHCrl \n', 'tags': '', 'url': 'W3.html'}, {'title': 'View Controls', 'text': '01 \n', 'tags': '', 'url': 'View Controls.html'}, {'title': 'Homework 01', 'text': '02 \n', 'tags': '', 'url': 'Homework 01.html'}, {'title': 'Lab 01 - Triangle Sketches', 'text': '03 \n', 'tags': '', 'url': 'Lab 01 - Triangle Sketches.html'}, {'title': 'Homework 02A - Step Block', 'text': '04 \n', 'tags': '', 'url': 'Homework 02A - Step Block.html'}, {'title': 'Homework 02B - Flywheel', 'text': '05 \n', 'tags': '', 'url': 'Homework 02B - Flywheel.html'}, {'title': 'W8', 'text': '底座 \n \n 桿1 \n \n 桿2、3、4、5、6 \n \n 三角板件 \n \n 上座 \n \n 手部 \n', 'tags': '', 'url': 'W8.html'}, {'title': 'W10', 'text': '', 'tags': '', 'url': 'W10.html'}, {'title': 'w10_block_ui', 'text': '\n \n', 'tags': '', 'url': 'w10_block_ui.html'}, {'title': 'w10_nx_integ', 'text': '\n \n', 'tags': '', 'url': 'w10_nx_integ.html'}, {'title': 'w10_ssh', 'text': '\n \n', 'tags': '', 'url': 'w10_ssh.html'}, {'title': 'W11', 'text': '', 'tags': '', 'url': 'W11.html'}, {'title': 'w11-1', 'text': '\n', 'tags': '', 'url': 'w11-1.html'}, {'title': 'w11-2', 'text': 'STL STL文件是一種用許多空間小三角形面片逼近三維實體表面的數據模型，通過給出組成三角形法向量的3個分量(用於確定三角面片的正反方向)及三角形的3個頂點座標來實現，目前的STL文件格式包括二進制文件(BINARY)和文本文件(ASCII)兩種。 \n 文本文件ASCII ASCII碼格式的STL文件逐行給出三角面片的幾何信息，每一行以1個或2個關鍵字開頭。在STL文件中的三角面片的 信息單元facet 是一個帶矢量方向的三角面片，STL文件的首行包含了文件路徑及文件名，在一個STL文件中，每一個facet由7行數據組成， facet normal 是三角面片指向實體外部的法矢量座標 ，outer loop說明隨後的3行數據分別是三角面片的3個頂點座標，3頂點沿指向實體外部的法矢量方向 逆時針排列。 \n facet normal ni nj nk\n    outer loop\n        vertex v1x v1y v1z\n        vertex v2x v2y v2z\n        vertex v3x v3y v3z\n    endloop\nendfacet \n \n 二進制文件BINARY \n 二進碼STL檔有個80 字元 的 檔頭，接著是一個4位元組 無號整數 Signedness ，它表示這檔案中的三角形數。再來是描述每個三角形的資訊。之後就結束。 \n 每個三角形以12個32位元浮點數來描述：3個描述法線，接著三頂點的X/Y/Z座標─正如文字STL一樣。之後是一個2位元組無號整數unsigned short，它代表「屬性字元數」在標準格式中它該是0，因為多數軟體不明白其它事項。 \n 雖然檔案內沒有說明，浮點數以little-endian的IEEE 754表示。 \n UINT8[80] – Header\nUINT32 – Number of triangles\n\n\nforeach triangle\nREAL32[3] – Normal vector\nREAL32[3] – Vertex 1\nREAL32[3] – Vertex 2\nREAL32[3] – Vertex 3\nUINT16 – Attribute byte count\nend \n ASCII格式的STL文件結構比較 二進制格式文件較小(通常是ASC¨碼格式的1／5)，節省文件存儲空間，而ASCII碼格式的文件可讀性更強，更容易進行進一步的數據處理。 \n 參考來源: https://www.twblogs.net/a/5b7fddb52b717767c6b22971 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 https://zh.m.wikipedia.org/zh-tw/STL_(%E6%AA%94%E6%A1%88%E6%A0%BC%E5%BC%8F)  \xa0 \xa0\xa0 \n \n \n \n \n', 'tags': '', 'url': 'w11-2.html'}, {'title': 'online', 'text': '', 'tags': '', 'url': 'online.html'}, {'title': 'W12', 'text': '計算零件數: \n import NXOpen\n   \ndef main():\n    # 取得目前開啟的工作階段\n    theSession = NXOpen.Session.GetSession()\n    # 建立 ListingWindow\n    listWin= theSession.ListingWindow\n    # 開啟零件檔案\n    try:\n        basePart1 = theSession.Parts.OpenBaseDisplay("Y:/mdecycu/cd2022_guide/downloads/cd2022_uarm/uArmSwiftPro_UP1300_3D_assembly.prt")\n    except:\n        # 零件已經開啟\n        pass\n     \n    # 開啟 Listing Window\n    listWin.Open()\n    # 將已經開啟的零件對應至 displayPart\n    displayPart = theSession.Parts.Display\n    # 計算引用零件數目\n    partNumber = 0\n    # 存放個別零件名稱的數列\n    partList = []\n    # 利用組立組件的根組件 GetChildren 方法逐一列出各子組件的名稱\n    for child in displayPart.ComponentAssembly.RootComponent.GetChildren():\n        listWin.WriteLine(child.DisplayName)\n        # 個別零件數列不計入重複引用的零件\n        if child.DisplayName not in partList:\n            partList.append(child.DisplayName)\n        # 引用零件數累計\n        partNumber += 1\n    # 在 Listing Window 中列出相關資訊\n    listWin.WriteLine("總共引用 " + str(partNumber) + " 個子零件.")\n    listWin.WriteLine("其中個別零件總數為" + str(len(partList)))\n                             \nif __name__ == "__main__":\n    main() \n \n 列出組立檔案中所有零件: \n Option Strict Off  \n \nImports System  \nImports NXOpen  \nImports NXOpen.UF  \nImports NXOpen.Assemblies  \n \nModule NXJournal  \n \n    Public theSession As Session = Session.GetSession()  \n    Public ufs As UFSession = UFSession.GetUFSession()  \n    Public lw As ListingWindow = theSession.ListingWindow  \n \n    Sub Main()  \n        Dim workPart As Part = theSession.Parts.Work  \n        Dim dispPart As Part = theSession.Parts.Display  \n \n        lw.Open()  \n        Try  \n            Dim c As ComponentAssembly = dispPart.ComponentAssembly  \n \'to process the work part rather than the display part,\n \'  comment the previous line and uncomment the following line\n \'Dim c As ComponentAssembly = workPart.ComponentAssembly\n            If Not IsNothing(c.RootComponent) Then  \n \'*** insert code to process \'root component\' (assembly file)\n                lw.WriteLine("Assembly: " & c.RootComponent.DisplayName)  \n                lw.WriteLine(" + Active Arrangement: " & c.ActiveArrangement.Name)  \n \'*** end of code to process root component\n                reportComponentChildren(c.RootComponent, 1)  \n            Else  \n \'*** insert code to process piece part\n                lw.WriteLine("Part has no components")  \n            End If  \n        Catch e As Exception  \n            theSession.ListingWindow.WriteLine("Failed: " & e.ToString)  \n        End Try  \n        lw.Close()  \n \n    End Sub  \n \n \'**********************************************************\n    Sub reportComponentChildren(ByVal comp As Component, ByVal indent As Integer)  \n \n        Dim numOccs(-1) As Tag  \n \n        For Each child As Component In comp.GetChildren()  \n \'*** insert code to process component or subassembly\n            lw.WriteLine(New String(" ", indent * 2) & child.DisplayName & vbTab & child.Name)  \n            Try  \n                ufs.Assem.AskOccsOfPart(comp.Prototype.OwningPart.Tag, child.Prototype.OwningPart.Tag, numOccs)  \n                lw.WriteLine(New String(" ", indent * 2) & "Quantity: " & numOccs.GetLength(0))  \n            Catch ex As System.NullReferenceException  \n                lw.WriteLine(New String(" ", indent * 2) & "*** Component quantity information unavailable (component not loaded)")  \n            Catch ex As ApplicationException  \n \n            End Try  \n \n \'*** end of code to process component or subassembly\n            If child.GetChildren.Length <> 0 Then  \n \'*** this is a subassembly, add code specific to subassemblies\n                lw.WriteLine(New String(" ", indent * 2) & _  \n                 "* subassembly with " & _  \n                 child.GetChildren.Length & " components")  \n                lw.WriteLine(New String(" ", indent * 2) & _  \n                 " + Active Arrangement: " & _  \n                 child.OwningPart.ComponentAssembly.ActiveArrangement.Name)  \n \'*** end of code to process subassembly\n            Else  \n \'this component has no children (it is a leaf node)\n \'add any code specific to bottom level components\n            End If  \n            lw.WriteLine("")  \n            reportComponentChildren(child, indent + 1)  \n \n        Next  \n \n    End Sub  \n \'**********************************************************\n    Public Function GetUnloadOption(ByVal dummy As String) As Integer  \n        Return Session.LibraryUnloadOption.Immediately  \n    End Function  \n \'**********************************************************\n \nEnd Module \n \n https://mde.tw/cd2022_guide/content/w12%20%E4%BB%BB%E5%8B%99.html \n https://mde.tw/cd2022_guide/content/NXOpen%20Python.html', 'tags': '', 'url': 'W12.html'}, {'title': 'W13', 'text': 'https://mde.tw/cd2022_guide/content/w13.html', 'tags': '', 'url': 'W13.html'}, {'title': 'W16', 'text': 'Online Exam \n 先設置數個代數並寫出從基座原點到吸盤頂點的計算式 \n \n 用python寫出運算式並帶入相對應數值 \n \n import math\n#基座座標\nX = 1\nY = 0.25\nZ = 0\nO=[X,Y,Z]\n#主臂長度\na = 0.142\nb = 0.1588\n#c =\nd1 = 0.0132\nd2 = 0.0445\nd3 = 0\nd4 = 0.1061\n#角度\n#Aa = math.radians(60+5)\ndeg = 180/math.pi\nAb = deg*(78.38+5)\nAc = deg*(41+5)\nAd = deg*(0-5)\nprint(O)\nprint("")\nD = [(X+a*math.cos(Ab)+b*math.sin(Ac)+d1+d2)*math.cos(Ad) , Y+(X+a*math.cos(Ab)+b*math.sin(Ac)+d1+d2)*math.sin(Ad) , Z+a*math.sin(Ab)+b*math.cos(Ac)+d4+d3]\nprint(D) \n \n 由於不確定組裝好後的角度是多少於是用copilasim取得各點座標，並用inventor畫出來量取角度 \n \n \n \n 計算各軸逆時鐘轉5度後的結果 \n \n', 'tags': '', 'url': 'W16.html'}, {'title': '期末考周', 'text': 'w18', 'tags': '', 'url': '期末考周.html'}]};